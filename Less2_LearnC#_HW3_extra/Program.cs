// Напишите программу, которая принимает на вход число (N) 
// и выдает таблицу простых чисел от 1 до N.

void PrintSimplNumberTable(int num)
{
    int n = 0; // индекс массива
    int i = 2; // переменная переборки чисел
    int length = 0; // для определения длины массива простых чисел (в т.ч. и промежуточную)

    List<int> simpleArr = new List<int>(); // сюда аккумулируем все найденные простые числа

    int simpleNumber = 0; //найденное простое число для записи в массив простых чисел

    int sqrt = Convert.ToInt32(Math.Sqrt(num)); // int - not double
                                                // определяем простое число - наибольший делитель для num

    for (i = 2; i <= 3; i++) // сразу заносим в массив первые два простых числа : 2 и 3
    {
        simpleNumber = i;
        simpleArr.Add(simpleNumber); // добавляем простое число в массив простых чисел
        length = simpleArr.Count;
    }

    i = i + 1; // осуществляем поиск простых чисел в диапазоне >3  до num

    while (i < num) // перебираем все числа в диапазоне от 2 до num (предполагаем, что каждое число - "вероятно простое")
    {
        simpleNumber = i; // сюда записываем простое число (на данном этапе - "вероятно простое" для последующей проверки по делителям)

        if (i % 2 == 0) //  сразу исключаем все четные числа
        {
            i++;
        }
        else
        {
            n = 1; // т.к. в массиве простых чисел под индексом "0" у нас простое число "2", а ранее мы уже исключили запись всех четных чисел, то "2" как делитель не рассматриваем

            while (n < length) // переборка возможных делителей возможного простого числа
            {
                if (simpleNumber % simpleArr[n] == 0) // проверяем делится ли вероятное простое число на простые числа из массива  с индеком 1 (простое число 3) до индекса с простым числом - наибольший делитель (sqrt)
                {
                    goto endThisCycle; // если делится без остатка - то вероятное простостое число - составное и идем к проверке следующего числа
                }

                else
                {
                    n++; // переход к следующему делителю из массива для проверки вероятного простого числа
                }
            }
            simpleArr.Add(simpleNumber); // если вероятное простое число "не поделилось" ни на один делитель - число ПРоСТОЕ : добавляем его в массив простых чисел
            length = simpleArr.Count;

        endThisCycle:
            i++; // переход к следующему вероятному простому числу для последующй проверки
        }
    } // закончили проверку всех возможных простых чисел в диапазоне от 2 до num

    length = simpleArr.Count; // окончательная длина массива простых чисел (кол-во выявленных простых чисел)
    Console.WriteLine();
    Console.WriteLine($"Таблица простых чисел от 1 до {num} содержит {length} простых чисел: ");

    Console.WriteLine();

    int k = 0;
    while (k < length) // Вывод сформированнного массива простых чисел
    {
        Console.Write($"{simpleArr[k]}, ");
        k++;
    }
    Console.WriteLine();
}

Console.Clear();
Console.Write("Введите любое целое число (больше 2х): ");
int number = int.Parse(Console.ReadLine()!);
if (number <= 2)
{
    Console.WriteLine();
    Console.WriteLine($"Вы ввели простое число {number}");
    Console.WriteLine($"Таблица простых чисел от 1 до {number} не содержит иных простых чисел.");
}

else
{
    PrintSimplNumberTable(number);
}

Console.WriteLine();
